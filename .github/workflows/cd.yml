name: CD

on:
  workflow_run:
    workflows: ["CI"]
    branches: [main]
    types:
      - completed
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production

jobs:
  deploy-dev:
    if: github.event.workflow_run.conclusion == 'success' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'development')
    runs-on: ubuntu-latest
    environment: development
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Clear npm cache and directories
        run: |
          rm -rf node_modules package-lock.json
          
      - name: Install dependencies
        run: |
          npm cache clean --force
          npm install --no-optional --no-fund --no-package-lock
      
      - name: Build for development
        env:
          ROLLUP_SKIP_NODEJS_NATIVE: 1
          DISABLE_NATIVE: true
          NODE_PENDING_DEPRECATION: 0
        run: |
          cp .env.development .env
          npm run build:github
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/fe-base:dev
            ${{ secrets.DOCKER_USERNAME }}/fe-base:dev-${{ github.sha }}
      
      # Add deployment steps for your development environment
      - name: Deploy to development
        run: echo "Deployed to development environment"

  deploy-staging:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging'
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Clear npm cache and directories
        run: |
          rm -rf node_modules package-lock.json
          
      - name: Install dependencies
        run: |
          npm cache clean --force
          npm install --no-optional --no-fund --no-package-lock
      
      - name: Build for staging
        env:
          ROLLUP_SKIP_NODEJS_NATIVE: 1
          DISABLE_NATIVE: true
          NODE_PENDING_DEPRECATION: 0
        run: |
          cp .env.staging .env
          npm run build:github
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/fe-base:staging
            ${{ secrets.DOCKER_USERNAME }}/fe-base:staging-${{ github.sha }}
      
      # Add deployment steps for your staging environment
      - name: Deploy to staging
        run: echo "Deployed to staging environment"

  deploy-production:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Clear npm cache and directories
        run: |
          rm -rf node_modules package-lock.json
          
      - name: Install dependencies
        run: |
          npm cache clean --force
          npm install --no-optional --no-fund --no-package-lock
      
      - name: Build for production
        env:
          ROLLUP_SKIP_NODEJS_NATIVE: 1
          DISABLE_NATIVE: true
          NODE_PENDING_DEPRECATION: 0
        run: |
          cp .env.production .env
          npm run build:github
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/fe-base:latest
            ${{ secrets.DOCKER_USERNAME }}/fe-base:prod-${{ github.sha }}
      
      # Add deployment steps for your production environment
      - name: Deploy to production
        run: echo "Deployed to production environment"
