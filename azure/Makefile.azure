# Azure Deployment Makefile
# This makefile contains commands for deploying to Azure

# Variables
include .env
export

# Azure CLI commands
.PHONY: azure-login azure-logout azure-status az-create-resource-group az-create-acr az-create-app-service

# Login to Azure
azure-login:
	@echo "Logging in to Azure..."
	az login

# Logout from Azure
azure-logout:
	@echo "Logging out from Azure..."
	az logout

# Check Azure status
azure-status:
	@echo "Checking Azure status..."
	az account show

# Create Azure Resource Group
az-create-resource-group:
	@echo "Creating Azure Resource Group: $(VITE_AZURE_RESOURCE_GROUP)..."
	az group create --name $(VITE_AZURE_RESOURCE_GROUP) --location eastus

# Create Azure Container Registry
az-create-acr:
	@echo "Creating Azure Container Registry: $(VITE_AZURE_CONTAINER_REGISTRY_NAME)..."
	az acr create --resource-group $(VITE_AZURE_RESOURCE_GROUP) \
		--name $(VITE_AZURE_CONTAINER_REGISTRY_NAME) \
		--sku Basic \
		--admin-enabled true

# Create Azure App Service Plan and App Service
az-create-app-service:
	@echo "Creating Azure App Service Plan and App Service: $(VITE_AZURE_APP_SERVICE_NAME)..."
	az appservice plan create \
		--resource-group $(VITE_AZURE_RESOURCE_GROUP) \
		--name $(VITE_AZURE_APP_SERVICE_NAME)-plan \
		--is-linux \
		--sku P1v2
	az webapp create \
		--resource-group $(VITE_AZURE_RESOURCE_GROUP) \
		--plan $(VITE_AZURE_APP_SERVICE_NAME)-plan \
		--name $(VITE_AZURE_APP_SERVICE_NAME) \
		--deployment-container-image-name nginx:alpine

# ACR Login and Push
.PHONY: az-acr-login az-build-and-push-dev az-build-and-push-staging az-build-and-push-prod

# Login to Azure Container Registry
az-acr-login:
	@echo "Logging in to Azure Container Registry: $(VITE_AZURE_CONTAINER_REGISTRY_NAME).azurecr.io..."
	az acr login --name $(VITE_AZURE_CONTAINER_REGISTRY_NAME)

# Build and push development image to ACR
az-build-and-push-dev: az-acr-login
	@echo "Building and pushing development image to ACR..."
	@cp .env.development .env
	docker build -f Dockerfile.dev \
		-t $(VITE_AZURE_CONTAINER_REGISTRY_NAME).azurecr.io/fe-base:dev \
		--build-arg VITE_API_URL=$(VITE_API_URL) \
		.
	docker push $(VITE_AZURE_CONTAINER_REGISTRY_NAME).azurecr.io/fe-base:dev

# Build and push staging image to ACR
az-build-and-push-staging: az-acr-login
	@echo "Building and pushing staging image to ACR..."
	@cp .env.staging .env
	docker build \
		-t $(VITE_AZURE_CONTAINER_REGISTRY_NAME).azurecr.io/fe-base:staging \
		--build-arg VITE_API_URL=$(VITE_API_URL) \
		.
	docker push $(VITE_AZURE_CONTAINER_REGISTRY_NAME).azurecr.io/fe-base:staging

# Build and push production image to ACR
az-build-and-push-prod: az-acr-login
	@echo "Building and pushing production image to ACR..."
	@cp .env.production .env
	docker build \
		-t $(VITE_AZURE_CONTAINER_REGISTRY_NAME).azurecr.io/fe-base:latest \
		--build-arg VITE_API_URL=$(VITE_API_URL) \
		.
	docker push $(VITE_AZURE_CONTAINER_REGISTRY_NAME).azurecr.io/fe-base:latest

# Deployment
.PHONY: az-deploy-dev az-deploy-staging az-deploy-prod

# Deploy development image to Azure App Service
az-deploy-dev: az-build-and-push-dev
	@echo "Deploying development image to Azure App Service..."
	az webapp config container set \
		--resource-group $(VITE_AZURE_RESOURCE_GROUP) \
		--name $(VITE_AZURE_APP_SERVICE_NAME) \
		--docker-custom-image-name $(VITE_AZURE_CONTAINER_REGISTRY_NAME).azurecr.io/fe-base:dev \
		--docker-registry-server-url https://$(VITE_AZURE_CONTAINER_REGISTRY_NAME).azurecr.io

# Deploy staging image to Azure App Service
az-deploy-staging: az-build-and-push-staging
	@echo "Deploying staging image to Azure App Service..."
	az webapp config container set \
		--resource-group $(VITE_AZURE_RESOURCE_GROUP) \
		--name $(VITE_AZURE_APP_SERVICE_NAME) \
		--docker-custom-image-name $(VITE_AZURE_CONTAINER_REGISTRY_NAME).azurecr.io/fe-base:staging \
		--docker-registry-server-url https://$(VITE_AZURE_CONTAINER_REGISTRY_NAME).azurecr.io

# Deploy production image to Azure App Service
az-deploy-prod: az-build-and-push-prod
	@echo "Deploying production image to Azure App Service..."
	az webapp config container set \
		--resource-group $(VITE_AZURE_RESOURCE_GROUP) \
		--name $(VITE_AZURE_APP_SERVICE_NAME) \
		--docker-custom-image-name $(VITE_AZURE_CONTAINER_REGISTRY_NAME).azurecr.io/fe-base:latest \
		--docker-registry-server-url https://$(VITE_AZURE_CONTAINER_REGISTRY_NAME).azurecr.io

# Utility
.PHONY: az-get-webapp-url az-browse-webapp az-restart-webapp az-logs

# Get the URL of the web app
az-get-webapp-url:
	@echo "Getting the URL of the Web App..."
	az webapp show --resource-group $(VITE_AZURE_RESOURCE_GROUP) --name $(VITE_AZURE_APP_SERVICE_NAME) --query defaultHostName -o tsv

# Open the browser to the web app
az-browse-webapp:
	@echo "Opening Web App in browser..."
	az webapp browse --resource-group $(VITE_AZURE_RESOURCE_GROUP) --name $(VITE_AZURE_APP_SERVICE_NAME)

# Restart the web app
az-restart-webapp:
	@echo "Restarting Web App..."
	az webapp restart --resource-group $(VITE_AZURE_RESOURCE_GROUP) --name $(VITE_AZURE_APP_SERVICE_NAME)

# Get logs from the web app
az-logs:
	@echo "Getting logs from Web App..."
	az webapp log tail --resource-group $(VITE_AZURE_RESOURCE_GROUP) --name $(VITE_AZURE_APP_SERVICE_NAME)

# Initialize Azure Resources for project
.PHONY: az-init

# Initialize all Azure Resources for the project
az-init: azure-login az-create-resource-group az-create-acr az-create-app-service
	@echo "Azure resources initialized successfully!"
	@echo "Resource Group: $(VITE_AZURE_RESOURCE_GROUP)"
	@echo "Container Registry: $(VITE_AZURE_CONTAINER_REGISTRY_NAME).azurecr.io"
	@echo "App Service: $(VITE_AZURE_APP_SERVICE_NAME)"
